name: UnLighthouse Report on Merge

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v2

      # Create a new branch to run the build and tests on
      - name: Create Lighthouse Branch
        run: git checkout -b lighthouse

      # Build the project
      - name: Install Dependencies and Build
        run: |
          npm install
          npm run build

      # Start the build server in the background
      - name: Start Build Server
        run: npm start &

      # Wait for the server to start (adjust the sleep duration if needed)
      - name: Wait for Server to Start
        run: sleep 10

      # Generate the Lighthouse report
      - name: Generate Lighthouse Report
        run: npx unlighthouse-ci --site http://localhost:3000 --reporter json

      # Save the report as an artifact
      - name: Save Report as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: lighthouse-report
          path: .unlighthouse/ci-result.json
      
      - name: Display Report in Terminal
        run: cat .unlighthouse/ci-result.json

      - name: Send Report via Mailgun
        env:
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
        run: |
          const formData = require('form-data');
          const Mailgun = require('mailgun.js');
          const mailgun = new Mailgun(formData);
          const mg = mailgun.client({ username: 'api', key: process.env.MAILGUN_API_KEY });

          mg.messages.create('sandbox-123.mailgun.org', {
            from: "Excited User <mailgun@sandbox-123.mailgun.org>",
            to: ["recipient@example.com"], // Replace with the recipient's email address
            subject: "Lighthouse Report",
            text: "Attached is the Lighthouse report.",
            attachment: [
              {
                data: require('fs').readFileSync('.unlighthouse/ci-result.json'),
                filename: 'lighthouse-report.json',
              },
            ],
          })
          .then(msg => console.log(msg)) // logs response data
          .catch(err => console.log(err));